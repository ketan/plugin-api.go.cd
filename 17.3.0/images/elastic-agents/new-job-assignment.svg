<?xml version="1.0" encoding="utf-8" ?>
<svg id="drawing" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" style="background: url('grid.png');" width="700" height="500">
  <text id="loading" font-family="Helvetica, Arial, sans-serif" x="10" y="10">Loading ...</text>
  <g id="start">
    <rect width="95" height="30" x="20" y="20" rx="6" ry="6" fill="#5cda5c"/>
    <text x="25" y="40">Click to start</text>
  </g>

  <script type="text/javascript" xlink:href="//cdnjs.cloudflare.com/ajax/libs/svg.js/1.0.1/svg.min.js"></script>
  <script type="text/javascript" xlink:href="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  <script type="text/javascript" xlink:href="velocity-1.2.2-with-patch.js"></script>
  <script type="text/javascript" xlink:href="//cdn.jsdelivr.net/tweene/latest/tweene-velocity.min.js"></script>
  <script type="text/javascript" xlink:href="go-common.js"></script>
  <script type="text/javascript">

    $('#loading').remove();
    var draw = SVG('drawing').size(700, 500).fixSubPixelOffset();
    var arrowHead = draw.marker(8, 8, function(add) { add.path("M0,0 V4 L8,2 Z"); }).ref(0.1, 2);
    var messageToUser = draw.plain("").move(200, 420);
    var pluginThoughtProcess = draw.plain("").move(50, 150);

    var plugin = box("Plugin", 60, 80).move(60, 170);

    var server = box("Server", 100, 100).move(260, 160);

    var agent1 = box("Agent 1", 70, 60, {fill: 'Lime'}).move(560,  60);
    var agent2 = box("Agent 2", 70, 60, {fill: 'Gold'}).move(560, 180);
    var agent3 = box("Agent 3", 70, 60, {fill: 'Brown'}).move(560, 300);

    var a1ToS = drawArrow(agent1, server);
    var a2ToS = drawArrow(agent2, server);
    var a3ToS = drawArrow(agent3, server);
    var sToP = drawArrow(server, plugin);

    var theNewAgents = draw.group().add(agent2).add(agent3).add(a2ToS).add(a3ToS).hide();

    var job1 = draw.rect(60, 20).move(280, 280).radius(6).attr({fill: "Lime"});
    var job1Text = centerOn(job1, draw.plain("Job 1").font({size: 10}));

    var job2 = draw.rect(60, 20).move(280, 310).radius(6).attr({fill: "Gold"});
    var job2Text = centerOn(job2, draw.plain("Job 2").font({size: 10}));

    var job3 = draw.rect(60, 20).move(280, 340).radius(6).attr({fill: "Brown"});
    var job3Text = centerOn(job3, draw.plain("Job 3").font({size: 10}));

    var job4 = draw.rect(60, 20).move(280, 370).radius(6).attr({fill: "Orange"});
    var job4Text = centerOn(job4, draw.plain("Job 4").font({size: 10}));

    var jobs = draw.group().add(job1Text).add(job2Text).add(job3Text).add(job4Text).hide();
    var agentsAndServer = draw.group().add(server).add(agent1).add(a1ToS).add(plugin).add(sToP).hide();

    /* Animation starts. */
    Tweene.defaultTimeUnit = 's';
    Tweene.defaultDriver = 'velocity';
    Tweene.defaultDuration = 3;

    var timeline = Tweene.line();

    timeline.add(function() { agentsAndServer.show(); }, '+=0');
    timeline.add(function() { showText(messageToUser, "Step 1: Agents poll server for work. Server says there's nothing to do."); }, '+=0');
    timeline.add(sendMessage(a1ToS, "Need\nWork", "No\nWork"), '+=0');

    timeline.add(function() { showText(messageToUser, "Step 2: New commit found. Jobs get created and scheduled."); }, '+=2');
    timeline.add(function() { jobs.show(); }, '+=1');

    timeline.add(sendMessage(sToP, 'Create Agent (job1)', "", {fill: 'Lime'}), '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, "Plugin does nothing, there's already an agent available"); }, '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, ""); }, '+=1');

    timeline.add(sendMessage(sToP, 'Create Agent (job2)', "", {fill: 'Gold'}), '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, "Plugin starts a new agent for job2"); }, '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, ""); }, '+=1');

    timeline.add(sendMessage(sToP, 'Create Agent (job3)', "", {fill: 'Brown'}), '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, "Plugin starts a new agent for job3"); }, '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, ""); }, '+=1');

    timeline.add(sendMessage(sToP, 'Create Agent (job4)', "", {fill: 'Orange'}), '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, "Plugin does nothing, no capacity available"); }, '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, ""); }, '+=1');

    timeline.add(function() { theNewAgents.show(); }, '+=1');

    timeline.add(elasticAgentPing(a1ToS, sToP, "Need\nWork", "Job 1", "Should Assign Work (job1, agent1)", "Yes", {fill: 'Lime'}), '+=1');
    timeline.add(function() { showText(pluginThoughtProcess, "Agent 3 can't be assigned job 2"); }, '+=1');
    timeline.add(elasticAgentPing(a3ToS, sToP, "Need\nWork", "No\nWork", "Should Assign Work (job2, agent3)", "No", {fill: 'Brown'}), "+=1");
    timeline.add(function() { showText(pluginThoughtProcess, ""); });
    timeline.add(elasticAgentPing(a2ToS, sToP, "Need\nWork", "Job 2", "Should Assign Work (job2, agent2)", "Yes", {fill: 'Gold'}), '+=1');
    timeline.add(elasticAgentPing(a3ToS, sToP, "Need\nWork", "Job 3", "Should Assign Work (job3, agent3)", "Yes", {fill: 'Brown'}), '+=1');

    timeline.add(sendMessage(a1ToS, "Job 1\nDone", "Ok"), '+=1');
    timeline.add(function() { job1.fill('#5CDA5C'); }, '+=1');

    timeline.add(sendMessage(a2ToS, "Job 2\nDone", "Ok"), '+=1');
    timeline.add(function() { job2.fill('#5CDA5C'); }, '+=1');

    timeline.add(sendMessage(a3ToS, "Job 3\nDone", "Ok"), '+=1');
    timeline.add(function() { job3.fill('#5CDA5C'); }, '+=1');

    timeline.add(function() { showText(messageToUser, "As time passes, the agents remain idle, and job 4 remains unassigned"); }, '+=1');
    timeline.add(function() {
      job1.remove();
      job1Text.remove();
      job2.remove();
      job2Text.remove();
      job3.remove();
      job3Text.remove();
    }, '+=1');
    timeline.add(function() { showText(messageToUser, ""); }, '+=1');

    timeline.add(sendMessage(sToP, "ServerPing", ""), '=+1');
    timeline.add(function(){showText(pluginThoughtProcess, "Agent1 has been idle for a while now, terminate");}, '+=1');
    timeline.add(function(){agent1.hide(); a1ToS.hide(); }, '+=1');
    timeline.add(function(){showText(pluginThoughtProcess, "");}, '+=1');

    timeline.add(function() { showText(messageToUser, "Since Job4 has been starving for a while"); }, '+=1');
    timeline.add(sendMessage(sToP, 'Create Agent (job4)'), '+=1');
    timeline.add(function() { showText(messageToUser, ""); }, '+=1');

    timeline.add(function() {
      $(agent1.node).find('text').text('Agent 4');
      $(agent1.node).find('rect').attr({fill: 'Orange'});
      agent1.show();
      a1ToS.show();
    }, '+=1');

    timeline.add(elasticAgentPing(a1ToS, sToP, "Need\nWork", "Job 4", "Should Assign Work (job4, agent4)", "Yes", {fill: 'Orange'}), '+=1');
    timeline.add(sendMessage(a1ToS, "Job 4\nDone", "Ok"), '+=1');
    timeline.add(function() { job4.fill('#5CDA5C'); }, '+=1');

    timeline.add(sendMessage(sToP, "ServerPing", ""), '=+1');
    timeline.add(function(){showText(pluginThoughtProcess, "Agent2, 3 and 4 have been idle for a while now, terminate");}, '+=1');
    timeline.add(function(){
      agent1.hide(); a1ToS.hide();
      agent2.hide(); a2ToS.hide();
      agent3.hide(); a3ToS.hide();
    }, '+=1');


    $("#start").click(function() {
      timeline.restart();
      $("#start").hide();
    });
  </script>
</svg>
